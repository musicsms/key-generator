name: CI/CD Pipeline

on:
  push:
    branches: [ dev ]
  pull_request:
    branches: [ dev ]

# Add permissions for the GitHub token
permissions:
  contents: read
  packages: write

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v2
    
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install bandit pytest pytest-cov requests
    
    - name: Run Bandit security checks
      run: bandit -r . -c .bandit
    
    - name: Run unit tests with coverage
      run: |
        pytest tests/ --cov=. --cov-report=xml -v
    
    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v3
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

  function-test:
    needs: test
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v2
    
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest requests
    
    - name: Install GPG
      run: |
        sudo apt-get update
        sudo apt-get install -y gnupg
    
    - name: Start application
      run: |
        python app.py &
        sleep 5  # Wait for the application to start
    
    - name: Run functional tests
      run: |
        pytest tests/functional/ -v
    
    - name: Stop application
      run: |
        pkill -f "python app.py" || true

  docker:
    needs: [test, function-test]
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v2
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
    
    - name: Login to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Build and test Docker image
      uses: docker/build-push-action@v2
      with:
        context: .
        load: true
        tags: ghcr.io/${{ github.repository }}:test
    
    - name: Test Docker image
      run: |
        docker run --name test-container -d -p 5001:5001 ghcr.io/${{ github.repository }}:test
        sleep 5
        curl -f http://localhost:5001/health || exit 1
        docker stop test-container
        docker rm test-container
    
    - name: Build and push Docker image
      uses: docker/build-push-action@v2
      if: github.event_name == 'push'
      with:
        context: .
        push: true
        tags: |
          ghcr.io/${{ github.repository }}:latest
          ghcr.io/${{ github.repository }}:${{ github.sha }}
