name: Security Scan

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  schedule:
    - cron: '0 0 * * 0'  # Run weekly at midnight on Sunday

env:
  REGISTRY: docker.io
  IMAGE_NAME: ${{ secrets.DOCKER_USERNAME }}/key-generator

permissions:
  contents: read
  security-events: write

jobs:
  python-security:
    name: Python Security Checks
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.13"
        cache: 'pip'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install bandit
        pip install -r requirements.txt

    - name: Run Bandit
      run: |
        mkdir -p security-results
        bandit -r . -f json -o security-results/bandit-results.json || true
        python .github/workflows/scripts/bandit-to-sarif.py security-results/bandit-results.json security-results/bandit-results.sarif

    - name: Upload Bandit scan results
      uses: github/codeql-action/upload-sarif@v3
      if: always()
      with:
        sarif_file: security-results/bandit-results.sarif
        category: bandit

  docker-security:
    name: Docker Image Security Scan
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Build Docker image
      run: docker build -t ${{ env.IMAGE_NAME }}:test .

    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@0.19.0
      with:
        image-ref: '${{ env.IMAGE_NAME }}:test'
        format: 'sarif'
        output: 'trivy-results.sarif'
        severity: 'CRITICAL,HIGH'
        ignore-unfixed: true
        vuln-type: 'os,library'

    - name: Upload Trivy scan results to GitHub Security
      uses: github/codeql-action/upload-sarif@v3
      if: always()
      with:
        sarif_file: 'trivy-results.sarif'

    - name: Docker Scout CVE Scan
      uses: docker/scout-action@v1
      with:
        command: cves
        image: '${{ env.IMAGE_NAME }}:test'
        only-severities: critical,high
        exit-code: true

  codeql:
    name: CodeQL Analysis
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Initialize CodeQL
      uses: github/codeql-action/init@v3
      with:
        languages: 'python'
        
    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v3
      with:
        category: "/language:python"
